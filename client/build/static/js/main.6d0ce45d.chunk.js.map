{"version":3,"sources":["components/PetList.js","components/PetForm.js","views/Main.js","views/Detail.js","views/Update.js","App.js","reportWebVitals.js","index.js"],"names":["props","removeFromDom","pet","map","idx","name","type","style","backgroundColor","color","to","_id","textDecoration","onClick","e","petId","axios","delete","then","res","useState","setName","setType","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","onSubmit","preventDefault","post","console","log","catch","err","errorResponse","response","data","errorArr","Object","keys","key","push","message","index","onChange","target","value","setPet","loaded","setLoaded","useEffect","get","PetList","filter","PetForm","id","useParams","notFound","setNotFound","put","App","className","exact","path","Main","Detail","Update","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d0ce45d.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nexport default props => {\r\n    const { removeFromDom } = props;\r\n    const deletePet = (petId) => {\r\n        axios.delete('http://localhost:8000/api/pet/' + petId)\r\n            .then(res => {\r\n                removeFromDom(petId)\r\n            })\r\n        // this call allows the delete function\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Pet Shelter</h1>\r\n            <h3>These pets are looking for a good home</h3>\r\n            {props.pet.map((pet, idx) => {\r\n                return <p key={idx}>\r\n                    {pet.name} {pet.type}\r\n                    ---\r\n                    <button style={{ backgroundColor: '#ee78ff', color: \"black\" }}>\r\n                        <Link to={\"/pet/\" + pet._id}>\r\n                            Details\r\n                        </Link>\r\n                    </button>\r\n                    ---\r\n                    <button style={{ backgroundColor: '#ee78ff', color: \"black\", textDecoration: \"underline\" }} onClick={(e) => { deletePet(pet._id) }}>\r\n                        Adopt!\r\n                    </button>\r\n                </p>\r\n\r\n            })}\r\n        </div >\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nexport default () => {\r\n    //keep track of what is being typed via useState hook\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\")\r\n    const [skill2, setSkill2] = useState(\"\")\r\n    const [skill3, setSkill3] = useState(\"\")\r\n    const [errors, setErrors] = useState([]);\r\n    //handler when the form is submitted\r\n\r\n    const onSubmitHandler = e => {\r\n        //prevent default behavior of the submit\r\n        e.preventDefault();\r\n        //make a post request to create a new pet\r\n        axios.post('http://localhost:8000/api/pet', {\r\n            name,\r\n            type,\r\n            skill1,\r\n            skill2,\r\n            skill3\r\n        })\r\n            .then(res => console.log(res)) // If successful, do something with the response. \r\n            .catch(err => {\r\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n                const errorArr = []; // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                // Set Errors\r\n                setErrors(errorArr);\r\n            })\r\n    }\r\n\r\n    \r\n    //onChange to update Name and lastName\r\n    return (\r\n        <form onSubmit={onSubmitHandler}>\r\n            {errors.map((err, index) => <p key={index}>{err}</p>)}\r\n            <h1>Add a pet here</h1>\r\n            <p>\r\n                <label>Name: </label><br />\r\n                <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} />\r\n            </p>\r\n            <p>\r\n                <label>Type: </label><br />\r\n                <input type=\"text\" onChange={(e) => setType(e.target.value)} value={type} />\r\n            </p>\r\n            <p>\r\n                <label>Skill 1: </label><br />\r\n                <input type=\"text\" onChange={(e) => setSkill1(e.target.value)} value={skill1} />\r\n            </p>\r\n            <p>\r\n                <label>Skill 2: </label><br />\r\n                <input type=\"text\" onChange={(e) => setSkill2(e.target.value)} value={skill2} />\r\n            </p>\r\n            <p>\r\n                <label>Skill 3: </label><br />\r\n                <input type=\"text\" onChange={(e) => setSkill3(e.target.value)} value={skill3} />\r\n            </p>\r\n            <button style={{ backgroundColor: '#ee78ff', color: \"black\", textDecoration: \"underline\" }} type=\"submit\">Submit</button>\r\n        </form>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport PetList from '../components/PetList';\r\nimport PetForm from '../components/PetForm';\r\n\r\nexport default () => {\r\n    const [pet, setPet] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/pet')\r\n            .then(res => {\r\n                setPet(res.data);\r\n                setLoaded(true);\r\n            });\r\n    }, [pet]);\r\n    // the pet inside the sqauare brackets is for it to auto update whenever there is a new pet. when a new pet is created the list is auto updated\r\n\r\n    const removeFromDom = petId => {\r\n        setPet(pet.filter(pet => pet._id != petId));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loaded && <PetList pet={pet} removeFromDom={removeFromDom} />}\r\n            <hr />\r\n            <PetForm />\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { useParams } from 'react-router';\r\n\r\nexport default props => {\r\n    console.log(\"detail component, props.id is this-->\", props.id)\r\n    const [pet, setPet] = useState({})\r\n    const { id } = useParams()\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pet/\" + id)\r\n            .then(res => {\r\n                console.log(res)\r\n                setPet(res.data)\r\n            })\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <p>Name: {pet.name}</p>\r\n            <p>Type: {pet.type}</p>\r\n            <p>Skill 1: {pet.skill1}</p>\r\n            <p>Skill 2: {pet.skill2}</p>\r\n            <p>Skill 3: {pet.skill3}</p>\r\n            <Link to={\"/pet/\" + pet._id + \"/edit\"}>\r\n                Edit\r\n            </Link>\r\n        </div>\r\n\r\n\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nexport default props => {\r\n    const { id } = useParams();\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\")\r\n    const [skill2, setSkill2] = useState(\"\")\r\n    const [skill3, setSkill3] = useState(\"\")\r\n    const [notFound, setNotFound] = useState(false)\r\n    const [errors, setErrors] = useState([]);\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/pet/' + id)\r\n            .then(res => {\r\n                console.log(\"response is this--->\", res)\r\n                if (res.data.value) {\r\n                    setNotFound(true)\r\n                } else {\r\n                    setName(res.data.name);\r\n                    setType(res.data.type)\r\n                    setSkill1(res.data.skill1)\r\n                    setSkill2(res.data.skill2)\r\n                    setSkill3(res.data.skill3)\r\n                }\r\n            })\r\n    }, [])\r\n    const updatePet = e => {\r\n        e.preventDefault();\r\n        axios.put('http://localhost:8000/api/pet/' + id, {\r\n            name,\r\n            type,\r\n            skill1,\r\n            skill2,\r\n            skill3\r\n        })\r\n            .then(res => console.log(res)) // If successful, do something with the response. \r\n            .catch(err => {\r\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n                const errorArr = []; // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                // Set Errors\r\n                setErrors(errorArr);\r\n            })\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Update a Pet</h1>\r\n            {notFound ?\r\n                <>\r\n                    <h1>The pet is not found, please create one</h1>\r\n                    <Link to=\"/pet\">Create a new pet</Link>\r\n                </> :\r\n                <form onSubmit={updatePet}>\r\n                    {errors.map((err, index) => <p key={index}>{err}</p>)}\r\n                    <p>\r\n                        <label>Name: </label><br />\r\n                        <input type=\"text\"\r\n                            name=\"Name\"\r\n                            value={name}\r\n                            // required={true}\r\n                            // minLength={(3)}\r\n                            onChange={(e) => { setName(e.target.value) }} />\r\n                    </p>\r\n                    <p>\r\n                        <label>Type: </label><br />\r\n                        <input type=\"text\"\r\n                            name=\"Type\"\r\n                            value={type}\r\n                            // required={true}\r\n                            // minLength={(3)}\r\n                            onChange={(e) => { setType(e.target.value) }} />\r\n                    </p>\r\n                    <p>\r\n                        <label>Skill 1: </label><br />\r\n                        <input type=\"text\"\r\n                            name=\"Skill1\"\r\n                            value={skill1}\r\n                            onChange={(e) => { setSkill1(e.target.value) }} />\r\n                    </p>\r\n                    <p>\r\n                        <label>Skill 2: </label><br />\r\n                        <input type=\"text\"\r\n                            name=\"Skill2\"\r\n                            value={skill2}\r\n                            onChange={(e) => { setSkill2(e.target.value) }} />\r\n                    </p>\r\n                    <p>\r\n                        <label>Skill 3: </label><br />\r\n                        <input type=\"text\"\r\n                            name=\"Skill3\"\r\n                            value={skill3}\r\n                            onChange={(e) => { setSkill3(e.target.value) }} />\r\n                    </p>\r\n                    <input type=\"submit\" />\r\n                    {/* above is the backend validation to see if the pet id exisits. if not it shows the first h1, else shows the edit page */}\r\n                </form>\r\n\r\n            }\r\n\r\n            <Link to={\"/pet/\"}>\r\n                Home\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Main from './views/Main';\nimport Detail from './views/Detail';\nimport Update from './views/Update';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n\n          <Route exact path=\"/pet/\">\n            <Main />\n          </Route>\n\n          <Route exact path=\"/pet/:id\" >\n            <Detail />\n          </Route>\n\n          <Route exact path=\"/pet/:id/edit\">\n            <Update />\n          </Route>\n\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}